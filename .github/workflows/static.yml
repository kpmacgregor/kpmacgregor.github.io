# Simple workflow for deploying static content to GitHub Pages
name: Build and deploy site

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  get-last-commit:
    runs-on: ubuntu-latest
    outputs:
      last-commit: ${{ steps.commit-sha.outputs.sha }}
    steps:
      - name: Find last successful build
        id: commit-sha
        uses: SamhammerAG/last-successful-build-action@v4
        with:
          branch: "main"
          workflow: ${{ github.workflow }}
      - name: Echo commit
        run: echo ${{ steps.commit-sha.outputs.sha }}

  get-delete-list:
    runs-on: ubuntu-latest
    needs: get-last-commit
    outputs:
      delete-list: ${{ steps.get-delete-list.outputs.delete-list }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get deletes
        # get any deleted files since last successful build
        id: get-delete-list
        run: |
          echo 'delete-list<<EOF' >> $GITHUB_OUTPUT
          echo "$(git log --diff-filter=D --summary ${{ needs.get-last-commit.outputs.last-commit }}..HEAD | grep ^" delete" | cut -d ' ' -f 5 | sort -u -)" >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
      - name: Echo deletes
        run: |
          echo "${{ steps.get-delete-list.outputs.delete-list }}"

  delete-files-from-site:
    runs-on: ubuntu-latest
    needs: get-delete-list
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: site
      - name: ls
        run: ls *
      - name: Delete files
        run: |
          for FILE in ${{ needs.get-delete-list.outputs.delete-list }}; do
            echo "$FILE"
            if [ -f "./$FILE" ]; then
              echo "Deleting $FILE"
              rm $FILE
            else
              echo "Couldn't find ./$FILE"
            fi
          done
      - name: Git status
        run: git status

  # copy-to-build-branch:
  #   runs-on: ubuntu-latest
    # steps:
    #   - name: 

  # Single deploy job since we're just deploying
  deploy:
    if: ${{ 1 == 0 }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # Upload entire repository
          path: './public'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
